#include <stdio.h>
#include <math.h>
#include <algorithm>
#define pow(a) ((a)*(a))
#define gen2 1.414214
#define E 0.000001

double x[5],y[5];
double dis[100];

double DIS(int i,int j)
{
	return sqrt(pow(x[i]-x[j])+pow(y[i]-y[j]));
}

double dian(double x1,double x2,double y1,double y2)
{
	return x1*x2+y1*y2;
}

int near(double a, double b)
{
	printf("\nhello%lf %lf\n",a,b);
	if(a >= b-E && a <= b+E)
		return 1;
	return 0;
}
double du[100];

int main()
{
	int test;
	scanf("%d",&test);
	//printf("%lf\n",sqrt(2.0));
	for(int tt = 1 ; tt <= test ;tt ++)
	{
		for(int i=0;i<4;i++)
		{
			scanf("%lf %lf",&x[i],&y[i]);
		}
		int cnt =0,dcnt =0;;
		for(int i=0;i<4;i++)
		{
			for(int j=0;j<4;j++)
			{
				if(i!=j)
				{
					dis[cnt++] = DIS(i,j);
					for(int k=0;k<j;k++)
						if(k != i && k != j)
						{
							double xx0 = x[i] - x[j];
							double xx1 = x[k] - x[j];
							double yy0 = y[i] - y[j];
							double yy1 = y[k] - y[j];
							double tmp = dian(xx0,xx1,yy0,yy1)/(DIS(i,j)*DIS(j,k));
							du[dcnt++] = tmp;
						}
				}
			}
		}
		std::sort(dis,dis+cnt);
		std::sort(du,du+dcnt);
		int dif[2] = {0};
		int bb = -1;
		for(int i=1;i<cnt;i++)
		{
			if(dis[i] != dis[i-1])	
			{
				double tmp = dis[i-1]*gen2;
				bb = i;
				//printf("%lf %lf %lf\n",dis[i-1],dis[i]-E,tmp);
				dif[0] ++;	
				if(tmp >= dis[i] - E && tmp <= dis[i] + E)
			//	if(tmp == dis[i])
				{
					dif[1] ++;
				}
			}
		}
		int flga = 0;
		int cc = 0;
		int bbb = 0;
		for(int i=0;i<dcnt;i++)
			printf("%lf ",du[i]);
		for(int i=1;i<dcnt;i++)
		{
			if(du[i]!=du[i-1])	
			{
				cc ++;
				bbb = i;
				if(near(du[i],gen2/2)==1&&near(du[i-1],0.0)==1)
				{
					flga ++;	
				}
			}
		}
		if(tt != 1)
			printf("\n");
		if(dif[0] == 1 && dif[1] == 1 && bb == 8 && cc == 1 && flga ==1 && bbb == 4)
			printf("Case %d:\nYes\n",tt);
		else printf("Case %d:\nNo\n",tt);
	}
}
